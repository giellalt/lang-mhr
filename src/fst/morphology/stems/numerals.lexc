! Divvun & Giellatekno - open source grammars for Sámi and other languages
! Copyright © 2000-2010 The University of Tromsø & the Norwegian Sámi Parliament
! http://giellatekno.uit.no & http://divvun.no
!
! This program is free software; you can redistribute and/or modify
! this file under the terms of the GNU General Public License as published by
! the Free Software Foundation, either version 3 of the License, or
! (at your option) any later version. The GNU General Public License
! is found at http://www.gnu.org/licenses/gpl.html. It is
! also available in the file $GTHOME/LICENSE.txt.
!
! Other licensing options are available upon request, please contact
! giellatekno@uit.no or feedback@divvun.no

! ############################## !
!! # Meadow & Eastern Mari numerals 
! ############################## !




! Numerals
! ========

!! ## The initial lexica
! ------------------

LEXICON Numeral   !!≈ * **@CODE@**  initial lexica
                       ARABICS          ; ! for the arabic numerals
            +Use/Circ: ROMAN            ; ! for the roman numerals

LEXICON ARABICS
            +Use/Circ: ARABIC          ; ! for the arabic numerals
!                       ARABICDATE       ; ! for dates
!                       ARABICYEAR       ; ! for years
!                       ARABICCLOCK       ; ! for time
                       ARABICORD        ; ! for ordinals




LEXICON ARABIC   !!≈ * **@CODE@** arabic numerals
< [1|2|3|4|5|6|7|8|9|%0] > ARABICLOOPS ;

LEXICON ARABICLOOPS
 ARABICLOOP      ;
+Num+Card+Arab: ENDLEX ; !These numerals are not ordinals 
 


LEXICON ARABICORD
   < [1|2|3|4|5|6|7|8|9] %0 %0 %0 > ARABICLOOPORD_Front ;
   < [1|2|3|4|5|6|7|8|9] [1|2|3|4|5|6|7|8|9|0] [1|2|3|6] %0 > ARABICLOOPORD_Back ;
   < [1|2|3|4|5|6|7|8|9] [1|2|3|4|5|6|7|8|9|0] [4|5|7|8|9] %0 > ARABICLOOPORD_Front ;
 < [1|2|3|4|5|6|7|8|9] [1|2|3|4|5|6|7|8|9|0] [1|2|3|4|5|6|7|8|9|0] [2|3|6] > ARABICLOOPORD_Back ;
 < [1|2|3|4|5|6|7|8|9] [1|2|3|4|5|6|7|8|9|0] [1|2|3|4|5|6|7|8|9|0] [1|4|5|7|8|9] > ARABICLOOPORD_Front ;

   < [1|2|3|4|5|6|7|8|9] %0 %0 > ARABICLOOPORD_FrontRound ;

   < [1|2|3|4|5|6|7|8|9] [1|2|3|6] %0 > ARABICLOOPORD_Back ;
   < [1|2|3|4|5|6|7|8|9] [4|5|7|8|9] %0 > ARABICLOOPORD_Front ;
 < [1|2|3|4|5|6|7|8|9] [1|2|3|4|5|6|7|8|9|0] [2|3|6] > ARABICLOOPORD_Back ;
 < [1|2|3|4|5|6|7|8|9] [1|2|3|4|5|6|7|8|9|0] [1|4|5|7|8|9] > ARABICLOOPORD_Front ;
   < [1|2|3|6] %0 > ARABICLOOPORD_Back ;
   < [4|5|7|8|9] %0 > ARABICLOOPORD_Front ;
 < [1|2|3|4|5|6|7|8|9] [2|3|6] > ARABICLOOPORD_Back ;
 < [1|2|3|4|5|6|7|8|9] [1|4|5|7|8|9] > ARABICLOOPORD_Front ;
                        < [2|3|6] > ARABICLOOPORD_Back ;
                        < [1|4|5|7|8|9] > ARABICLOOPORD_Front ;


LEXICON ARABICLOOP   !!≈ * **@CODE@**
                           ARABIC          ;
               %-:%-       ARABIC          ; ! 1-2 multipart numbers
               %–:%–       ARABIC          ; ! 1–2 multipart numbers
               %—:%—       ARABIC          ; ! 1—2 multipart numbers
             %.%-:%.%-     ARABIC          ; ! 1.-2 multipart numbers ! !
             %.%–:%.%–     ARABIC          ; ! 1.–2 multipart numbers ! !
             %.%—:%.%—     ARABIC          ; ! 1.—2 multipart numbers ! !
             %-% :%-%      ARABIC          ; ! 1- 2 multipart numbers
             %–% :%–%      ARABIC          ; ! 1– 2 multipart numbers
             %—% :%—%      ARABIC          ; ! 1— 2 multipart numbers
             % %-:% %-     ARABIC          ; ! 1 -2 multipart numbers
             % %–:% %–     ARABIC          ; ! 1 –2 multipart numbers
             % %—:% %—     ARABIC          ; ! 1 —2 multipart numbers
           % %-% :% %-%    ARABIC          ; ! 1 - 2 multipart numbers
           % %–% :% %–%    ARABIC          ; ! 1 – 2 multipart numbers
           % %—% :% %—%    ARABIC          ; ! 1 — 2 multipart numbers
         % %-%-% :% %-%-%  ARABIC          ; ! 1 -- 2 multipart numbers
         % %–%–% :% %–%–%  ARABIC          ; ! 1 –– 2 multipart numbers
         % %—%—% :% %—%—%  ARABIC          ; ! 1 —— 2 multipart numbers
               %.:%.       ARABIC          ;
               %::%:       ARABIC          ;
               %,:%,       ARABIC          ;
               % :%        ARABIC          ; ! Allowing for "23 500". Lene: Denne er plagsom og bør forbedres. F.eks. 2017 30 vil vi ikke ha om ett tall.
                 :         ARABIC          ; ! Allowing for "23 500" w/nbsp (init char = alt-space)
               %/:%/       ARABIC          ; ! 24/12
             %/% :%/%      ARABIC          ; ! 24/ 12
             % %/:% %/     ARABIC          ; ! 24 /12
                ':'        ARABIC          ; ! 24'12


LEXICON ARABICLOOPORD_Back   !!≈ * **@CODE@** ordinals
 +A+Ord+Attr:%-шо # ;
! +Num+Arab+Sg+Nom#%.%<sent%>:%. # ; !for Apertium bz. 22
 +A+Ord+Use/Circ: ARABICDELIMITERORD_Back ;

LEXICON ARABICLOOPORD_Front   !!≈ * **@CODE@** ordinals
 +A+Ord+Attr:%-ше # ;
! +Num+Arab+Sg+Nom#%.%<sent%>:%. # ; !for Apertium bz. 22
 +A+Ord+Use/Circ: ARABICDELIMITERORD_Front ;

LEXICON ARABICLOOPORD_FrontRound   !!≈ * **@CODE@** ordinals
 +A+Ord+Attr:%-шӧ # ;
! +Num+Arab+Sg+Nom#%.%<sent%>:%. # ; !for Apertium bz. 22
 +A+Ord+Use/Circ: ARABICDELIMITERORD_FrontRound ;


LEXICON ARABICDELIMITERORD_Back   !!≈ * **@CODE@** ordinals
 +Err/Orth:   ARABICCASEORD_Back ; ! This is the 1984s case.
 +Err/Orth:'  ARABICCASEORD_Back ; ! This is the 1984's case.
 :%- ARABICCASEORD_Back ; ! This is the 1984-s case.

LEXICON ARABICDELIMITERORD_Front   !!≈ * **@CODE@** ordinals
 +Err/Orth:   ARABICCASEORD_Front ; ! This is the 1984s case.
 +Err/Orth:'  ARABICCASEORD_Front ; ! This is the 1984's case.
 :%- ARABICCASEORD_Front ; ! This is the 1984-s case.

LEXICON ARABICDELIMITERORD_FrontRound   !!≈ * **@CODE@** ordinals
 +Err/Orth:   ARABICCASEORD_FrontRound ; ! This is the 1984s case.
 +Err/Orth:'  ARABICCASEORD_FrontRound ; ! This is the 1984's case.
 :%- ARABICCASEORD_FrontRound ; ! This is the 1984-s case.



!! The Roman numerals !
!! ------------------ !

LEXICON ROMAN   !!≈ * **@CODE@**  roman numerals
 +Use/Circ: ROM-THOUSAND ; !
 +Use/Circ: ROM-HUNDRED ; !
 +Use/Circ: ROM-TEN ; !
 +Use/Circ: ROM-ONE ; !

LEXICON ROM-THOUSAND   !!≈ * **@CODE@**
     M+Use/Circ:M     ROM-THOUSAND-TAG ;
    MM+Use/Circ:MM    ROM-THOUSAND-TAG ;
   MMM+Use/Circ:MMM   ROM-THOUSAND-TAG ;
  MMMM+Use/Circ:MMMM  ROM-THOUSAND-TAG ;
 MMMMM+Use/Circ:MMMMM ROM-THOUSAND-TAG ;

LEXICON ROM-THOUSAND-TAG   !!≈ * **@CODE@**
 +Use/Circ: ROMNUMTAG   ; !
 +Use/Circ: ROM-HUNDRED ; !
 +Use/Circ: ROM-TEN     ; !
 +Use/Circ: ROM-ONE     ; !
 +Use/Circ: ROM-SPLIT   ; !

LEXICON ROM-HUNDRED   !!≈ * **@CODE@**
    C+Use/Circ:C    ROM-HUNDRED-TAG ;
   CC+Use/Circ:CC   ROM-HUNDRED-TAG ;
  CCC+Use/Circ:CCC  ROM-HUNDRED-TAG ;
   CD+Use/Circ:CD   ROM-HUNDRED-TAG ;
    D+Use/Circ:D    ROM-HUNDRED-TAG ;
   DC+Use/Circ:DC   ROM-HUNDRED-TAG ;
  DCC+Use/Circ:DCC  ROM-HUNDRED-TAG ;
 DCCC+Use/Circ:DCCC ROM-HUNDRED-TAG ;
   CM+Use/Circ:CM   ROM-HUNDRED-TAG ;

LEXICON ROM-HUNDRED-TAG   !!≈ * **@CODE@**
 +Use/Circ: ROMNUMTAG ;
 +Use/Circ: ROM-TEN   ;
 +Use/Circ: ROM-ONE   ;
 +Use/Circ: ROM-SPLIT ;

LEXICON ROM-TEN   !!≈ * **@CODE@**
    X+Use/Circ:X    ROM-TEN-TAG ;
   XX+Use/Circ:XX   ROM-TEN-TAG ;
  XXX+Use/Circ:XXX  ROM-TEN-TAG ;
   XL+Use/Circ:XL   ROM-TEN-TAG ;
    L+Use/Circ:L    ROM-TEN-TAG ;
   LX+Use/Circ:LX   ROM-TEN-TAG ;
  LXX+Use/Circ:LXX  ROM-TEN-TAG ;
 LXXX+Use/Circ:LXXX ROM-TEN-TAG ;
   XC+Use/Circ:XC   ROM-TEN-TAG ;

LEXICON ROM-TEN-TAG   !!≈ * **@CODE@**
 +Use/Circ: ROMNUMTAG ;
 +Use/Circ: ROM-ONE   ;
 +Use/Circ: ROM-SPLIT ;

LEXICON ROM-ONE   !!≈ * **@CODE@**
    I+Use/Circ:I    ROM-ONE-TAG ;
   II+Use/Circ:II   ROM-ONE-TAG ;
  III+Use/Circ:III  ROM-ONE-TAG ;
   IV+Use/Circ:IV   ROM-ONE-TAG ;
    V+Use/Circ:V    ROM-ONE-TAG ;
   VI+Use/Circ:VI   ROM-ONE-TAG ;
  VII+Use/Circ:VII  ROM-ONE-TAG ;
 VIII+Use/Circ:VIII ROM-ONE-TAG ;
   IX+Use/Circ:IX   ROM-ONE-TAG ;

LEXICON ROM-ONE-TAG   !!≈ * **@CODE@**
  +Use/Circ: ROMNUMTAG ;
!        +N: ROMNUMTAG ; ! !The Olav viđeš fix (Roman V now gets A)
  +Use/Circ: ROM-SPLIT ;

! Here, we split the Roman numerals, in order to account for cases like
! "Kapihtal II-IV". We may send this first part directly to ROM-TAG below (and
! get the +Num tag), or we may send them through a second loop, identical to
! the first one, but marked wit "2" (the lexica are called 2ROMAN, etc. We do
! this instead of making a loop, since we do not want cases like
! "II-IV-VI-VII-IX". If that should turn out to be a good idea, a loop would
! do the trick.

LEXICON ROM-SPLIT   !!≈ * **@CODE@**
 +Use/Circ:%- 2ROMAN ; ! II-VI, etc. !


! Here goes loop 2.

LEXICON 2ROMAN   !!≈ * **@CODE@**
 +Use/Circ: 2ROM-THOUSAND ;
 +Use/Circ: 2ROM-HUNDRED  ;
 +Use/Circ: 2ROM-TEN      ;
 +Use/Circ: 2ROM-ONE      ;

LEXICON 2ROM-THOUSAND   !!≈ * **@CODE@**
     M+Use/Circ:M     2ROM-THOUSAND-TAG ;
    MM+Use/Circ:MM    2ROM-THOUSAND-TAG ;
   MMM+Use/Circ:MMM   2ROM-THOUSAND-TAG ;
  MMMM+Use/Circ:MMMM  2ROM-THOUSAND-TAG ;
 MMMMM+Use/Circ:MMMMM 2ROM-THOUSAND-TAG ;

LEXICON 2ROM-THOUSAND-TAG   !!≈ * **@CODE@**
 +Use/Circ: ROMNUMTAG    ;
 +Use/Circ: 2ROM-HUNDRED ;
 +Use/Circ: 2ROM-TEN     ;
 +Use/Circ: 2ROM-ONE     ;

LEXICON 2ROM-HUNDRED   !!≈ * **@CODE@**
    C+Use/Circ:C    2ROM-HUNDRED-TAG ;
   CC+Use/Circ:CC   2ROM-HUNDRED-TAG ;
  CCC+Use/Circ:CCC  2ROM-HUNDRED-TAG ;
   CD+Use/Circ:CD   2ROM-HUNDRED-TAG ;
    D+Use/Circ:D    2ROM-HUNDRED-TAG ;
   DC+Use/Circ:DC   2ROM-HUNDRED-TAG ;
  DCC+Use/Circ:DCC  2ROM-HUNDRED-TAG ;
 DCCC+Use/Circ:DCCC 2ROM-HUNDRED-TAG ;
   CM+Use/Circ:CM   2ROM-HUNDRED-TAG ;

LEXICON 2ROM-HUNDRED-TAG   !!≈ * **@CODE@**
 +Use/Circ: ROMNUMTAG ;
 +Use/Circ: 2ROM-TEN  ;
 +Use/Circ: 2ROM-ONE  ;

LEXICON 2ROM-TEN   !!≈ * **@CODE@**
    X+Use/Circ:X    2ROM-TEN-TAG ;
   XX+Use/Circ:XX   2ROM-TEN-TAG ;
  XXX+Use/Circ:XXX  2ROM-TEN-TAG ;
   XL+Use/Circ:XL   2ROM-TEN-TAG ;
    L+Use/Circ:L    2ROM-TEN-TAG ;
   LX+Use/Circ:LX   2ROM-TEN-TAG ;
  LXX+Use/Circ:LXX  2ROM-TEN-TAG ;
 LXXX+Use/Circ:LXXX 2ROM-TEN-TAG ;
   XC+Use/Circ:XC   2ROM-TEN-TAG ;

LEXICON 2ROM-TEN-TAG   !!≈ * **@CODE@**
 +Use/Circ: ROMNUMTAG ;
 +Use/Circ: 2ROM-ONE  ;

LEXICON 2ROM-ONE   !!≈ * **@CODE@**
    I+Use/Circ:I    2ROM-ONE-TAG ;
   II+Use/Circ:II   2ROM-ONE-TAG ;
  III+Use/Circ:III  2ROM-ONE-TAG ;
   IV+Use/Circ:IV   2ROM-ONE-TAG ;
    V+Use/Circ:V    2ROM-ONE-TAG ;
   VI+Use/Circ:VI   2ROM-ONE-TAG ;
  VII+Use/Circ:VII  2ROM-ONE-TAG ;
 VIII+Use/Circ:VIII 2ROM-ONE-TAG ;
   IX+Use/Circ:IX   2ROM-ONE-TAG ;

LEXICON 2ROM-ONE-TAG   !!≈ * **@CODE@**
 +Use/Circ: ROMNUMTAG ;

LEXICON ROMNUMTAG   !!≈ * **@CODE@**
  +Num+Rom+Sg+Nom+Use/Circ:   #            ;


 LEXICON ARABICCASEORD_Back   !!≈ * **@CODE@** ordinals Is this then becoming +Ex/A?
 +Arab+N:%>ш%{оы%}  N-continuation ;
 +Err/Orth+Arab+N:%>ш%{еы%}  N-continuation ;
 +Err/Orth+Arab+N:%>ш%{ӧы%}  N-continuation ;
 LEXICON ARABICCASEORD_Front   !!≈ * **@CODE@** ordinals
 +Arab+N:%>ш%{еы%}  N-continuation ;
 +Err/Orth+Arab+N:%>ш%{оы%}  N-continuation ;
 +Err/Orth+Arab+N:%>ш%{ӧы%}  N-continuation ;
 LEXICON ARABICCASEORD_FrontRound   !!≈ * **@CODE@** ordinals
 +Arab+N:%>ш%{ӧы%}  N-continuation ;
 +Err/Orth+Arab+N:%>ш%{оы%}  N-continuation ;
 +Err/Orth+Arab+N:%>ш%{еы%}  N-continuation ;

